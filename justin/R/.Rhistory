mvrnorm
require(MASS)
mu <- rep(0, 2)
sigma <- matrix(c(10,3,3,2),2,2)
mvrnorm(n=10, mu, sigma)
mu <- rep(0, 4)
sigma <- matrix(c(1, 1, 1, 1, 1, 1, 1, 1), 4, 4)
mvrnorm(n=10, mu, sigma)
runif(10)
runif(10, 10)
nrow <- 10
ncol <- 6
runif(nrow, ncol)
runif(nrow*ncol)
str(runif(nrow*ncol))
matrix(runif(nrow*ncol), nrow, ncol)
?matrix
rest <- matrix(runif(nrow*ncol), nrow, ncol)
pattern <- mvrnorm(n=10, mu, sigma)
pattern
rest
cbind(pattern, rest)
combined <- cbind(pattern, rest)
heatmap(combined)
mu <- rep(5, 4)
sigma <- matrix(c(1, 1, 1, 1, 1, 1, 1, 1), 4, 4)
pattern2 <- mvrnorm(n=10, mu, sigma)
rest2 <- matrix(runif(nrow*ncol), nrow, ncol)
combined2 <- cbind(pattern2, rest2)
all <- rbind(combined, combined2)
heatmap(all)
mypca <- prcomp(all)
print(mypca)
plot(mycpa, type="1!")
plot(mycpa, type="1")
plot(mypca, type="1")
mypca <- prcomp(all)su
summary(mypca)
> screeplot(wine.pca, type="lines")
screeplot(mypca, type="lines")
require(MASS)
?mvrnorm
mu1 <- rep(0, 4)
sigma1 <- matrix(rep(1, 16), 4, 4)
mu1
sigma1
mvrnorm(10, mu1, sigma1)
sigma1 <- matrix(rep(10, 16), 4, 4)
mvrnorm(10, mu1, sigma1)
sigma1 <- matrix(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16), 4, 4)
mvrnorm(10, mu1, sigma1)
seq(1, 16)
seq(1, 16, by=2)
sigma1 <- seq(1, 16)
mvrnorm(10, mu1, sigma1)
sigma1 <- matrix(seq(1, 16), 4, 4)
mvrnorm(10, mu1, sigma1)
mvrnorm(10, mu1, sigma1)
data1 <- mvrnorm(10, mu1, sigma1)
runif
matrix(runif(10*6), 10, 6)
noise1 <- matrix(runif(10*6), 10, 6)
cbind(data1, noise1)
group1 <- cbind(data1, noise1)
sigma2 <- matrix(seq(1, 32, by=2), 4, 4)
data2 <- mvrnorm(10, mu1, sigma1)
noise2 <- matrix(runif(10*6), 10, 6)
group2 <- cbind(data2, noise2)
groups <- rbind(group1, group2)
heatmap(groups)
library(car)
library("car")
install.packages(car)
install.packages("car")
library(car)
scatterplotMatrix(groups)
groups
plot(groups[, 1], groups[, 2])
scatterplotMatrix(groups)
plot(groups[, 1], groups[, 2])
scatterplotMatrix(groups)
plot(groups[, 1], groups[, 3])
scale(groups)
sgroups <- scale(groups)
heatmap(sgroups)
heatmap(groups)
heatmap(sgroups)
sapply(sgroups, mean)
sgroups <- as.data.frame(scale(groups))
sgroups
sgroups$V1
sapply(sgroups, mean)
sapply(sgroups, sd)
pca <- prcomp(sgroups)
summary(pca)
pca$sdev
sum((pca$sdev)^2)
screeplot(pca)
?screeplot
screeplot(pca, type="lines")
pca$sdev^2
(pca$sdev)^2
pca$rotation
pca$rotation[, 1]
sum(pca$rotation[, 1]^2)
pca$x
pca$x[, 1]
plot(pca$x[, 1], pca$[x, 2])
plot(pca$x[, 1], pca$[x, 2])
pca$x[, 1]
pca$x[, 2]
pca$x[, 2]
pc1 <- pca$x[, 1]
pc2 <- pca$x[, 2]
plot(pc1, pc2)
text(pc1, pc2, groups$V1, cex=0.7, pos=4, col="red")
groups
text(pc1, pc2, sgroups$V1, cex=0.7, pos=4, col="red")
install.packages(c("rJava"))
install.packages(c("rJava"))
R CMD javareconf
install.packages(c("rJava"))
install.packages(c("rJava"))
setwd("~/git/metabolomics_tools/justin/R")
source('~/git/metabolomics_tools/justin/R/MS1MS2_MatrixGeneration_default_7ppm_specPeaks.R')
source('~/git/metabolomics_tools/justin/R/MS1MS2_MatrixGeneration_default_7ppm_specPeaks.R')
# load Tony Larson's script
source('xcmsSetFragments.R')
frags <- xcmsSetFragments(xset, cdf.corrected = FALSE, min.rel.int=0.01, max.frags = 5000,
msnSelect=c("precursor_int"), specFilter=c("specPeaks"), match.ppm=7,
sn=3, mzgap=0.005, min.r=0.75, min.diff=10)
peaks <- as.data.frame(frags@peaks)
##########################
##### Data filtering #####
##########################
source('createPeakList.R')
results <- create_peaklist(peaks, use_relative_intensities)
ms1 <- results$ms1
ms2 <- results$ms2
###############################
##### Feature Extractions #####
###############################
source('extractFragmentFeatures.R')
results <- extract_ms2_fragment_df(ms1, ms2, prev_words_file)
fragment_df <- results$fragment_df
ms2 <- results$ms2
source('extractLossFeatures.R')
results <- extract_neutral_loss_df(ms1, ms2, prev_words_file)
neutral_loss_df <- results$neutral_loss_df
ms2 <- results$ms2
write.table(ms1, file=ms1_out, col.names=NA, row.names=T, sep=",")
write.table(ms2, file=ms2_out, col.names=NA, row.names=T, sep=",")
write.table(fragment_df, file=fragments_out, col.names=NA, row.names=T, sep=",")
write.table(neutral_loss_df, file=losses_out, col.names=NA, row.names=T, sep=",")
write.table(mz_diff_df, file=mzdiffs_out, col.names=NA, row.names=T, sep=",")
################################
## Read in data and get peaks ##
################################
# do peak detection using CentWave
xset <- xcmsSet(files=input_file, method="centWave", ppm=2, snthresh=3, peakwidth=c(5,100),
prefilter=c(3,1000), mzdiff=0.001, integrate=0, fitgauss=FALSE, verbose.column=TRUE)
source('~/git/metabolomics_tools/justin/R/MS1MS2_MatrixGeneration_default_7ppm_specPeaks.R')
